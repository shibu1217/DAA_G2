
//knapsack subset count
#include <iostream>

using namespace std;

int knapSack(int n,int arr[],int sum)
{
 
   
   int t[n+1][sum+1];
 
  int i,j;
   
 t[0][0]=1;

    for(i=0;i<n+1;i++)
    {

        for(j=0;j<sum+1;j++)
   
     {
            if(i==0)
           
   t[i][j]=false;
           
 if(j==0)
             
t[i][j]=true;
        }
    }
  
   for(i=1;i<n+1;i++)
    {
       
 for(j=1;j<sum+1;j++)
        {
   
         if(arr[i-1]<=j)
        
      t[i][j]=t[i-1][j-arr[i-1]]+ t[i-1][j];
  
           else
            
  t[i][j]=t[i-1][j];
        }

        
    }
    
return t[n][sum];
}


int main()
{
 
  int arr[]={2,3,5,6,8};
 
  int sum=10;
   
int n=sizeof arr/sizeof arr[0];
 
  int result=knapSack(n,arr,sum);

   cout<<result;
   
 
  return 0;
}